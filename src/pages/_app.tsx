import { type Session } from "next-auth";
import { SessionProvider, signIn, useSession } from "next-auth/react";
import { type AppType } from "next/app";
import { api } from "~/utils/api";
import Head from "next/head";
import { SpeedInsights } from "@vercel/speed-insights/next";
import "~/styles/globals.css";
import React from "react";

const MyApp: AppType<{ session: Session | null }> = ({
  Component,
  pageProps: { session, ...pageProps },
}) => {
  return (
    <SessionProvider session={session}>
      <Head>
        <title>Monei</title>
        <meta name="description" content="Generated by create-t3-app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      {"auth" in Component && Component.auth ? (
        <Auth>
          <Component {...pageProps} />
        </Auth>
      ) : (
        <Component {...pageProps} />
      )}
      <SpeedInsights />
    </SessionProvider>
  );
};

function Auth({ children }: { children: React.ReactNode }) {
  const { status, data } = useSession();
  const isUser = !!data?.user;
  React.useEffect(() => {
    if (status === "loading") return;
    if (!isUser) void signIn();
  }, [isUser, status]);

  if (isUser) {
    return children;
  }

  return null;
}

export default api.withTRPC(MyApp);
